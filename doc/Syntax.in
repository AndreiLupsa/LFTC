III. Syntax:

	<program> ::= START <compstmt> END

	<compstmt> ::= <stmt> | <stmt> <compstmt>
	<stmt> ::= <declstmt> ; | <assignstmt> ; | <execstmt> ;

	<execstmt> ::= <ifstmt> | <whilestmt> | <instmt> | <outstmt>

	<ifstmt> ::= ? ( <condition> ) { <compstmt> } | ? ( <condition> ) { <compstmt> } ! { <compstmt> }

	<condition> ::= <exp> | <exp> <operator> <exp> | ( <condition> ) <operator> ( <condition> )

	<symbol> ::= <identifier> | <constant>

	<whilestmt> ::= & ( <condition> ) { <compstmt> }

	<instmt> ::= read ( <identifier> )

	<outstmt> ::= write ( <exp> )

	<assignstmt> ::= <identifier> = <exp>

	<exp> ::= <term> | <exp> + <term> | <exp> - <term>

	<term> ::=  <factor> | <term> * <factor> | <term> / <factor>

	<factor> ::= ( <exp> ) | <symbol>

	<declstmt> ::= <type> <identifier> | <type> <assignstmt> | <arraydecl>

	<type> ::= Integer | Boolean | Char | String

	<arraydecl> ::= Array <type> [ <nonzeroseq> ] 

	<nonzeroseq> ::= <nonzero> | <nonzero> <nonzeroseq>

	 

	